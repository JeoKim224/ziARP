///////////////////////////////////////////////////////////////////////////////////////
//
//	* 'ziArp' - a ARP poisoning attack detector
//	* 2012 Summer Handong Global University GHOST U3 Team Open Source Project
//	* File Name		: engin.cpp
//	* Author		: 이승재
//	* Date			: 2012. 7. 16 - 2012. 8. 4
//	* Description
//		GUI에서 탐지할 인터페이스를 결정한 후 해당 함수로 스레드를 생성하면서 인덱스를 넘겨준다.
//		해당 프로그램은 크게 두가지 스레드의 움직임으로 구분할 수 있는데 그 하나가 engin 쓰레드다.
//		이 쓰레드는 프로그램이 실행되어 인터페이스가 결정된후부터 백그라운드에서 지속적으로
//		탐지를 한다.
//
///////////////////////////////////////////////////////////////////////////////////////
#define ENGIN
///////////////////////////////////////////////////////////////////////////////////////
//
//	'#include's
//
///////////////////////////////////////////////////////////////////////////////////////
#include "header/datas.h"
#include "header/log.h"

///////////////////////////////////////////////////////////////////////////////////////
//
//	Prototypes
//
///////////////////////////////////////////////////////////////////////////////////////
int openDevice(int index);				//openDevice.cpp
void arp_scanning();					//arp_scanning.cpp
int detect_engin(char* IAdapter);		//detect_engin.cpp

///////////////////////////////////////////////////////////////////////////////////////
//
//	Body
//
///////////////////////////////////////////////////////////////////////////////////////
//=====================================================================================
//
//	* Function : engin()
//	* Description 
//		이 함수는 스레드로 백그라운드로 돌아가면서 탐지작업을 수행한다.
//		인자로 넘어오는 인덱스는 디바이스 링크드 리스트의 노드 순서값이다.
//		1. openDevice(*index) 해당 인터페이스를 연다.
//		2. arp_scanning() 동일 LAN의 MAC을 스캔한후 ARP_LIST에 저장한다.
//		3. detect_engin(deviceName) 비정상 arp패킷을 탐지한다.
//
//=====================================================================================
DWORD WINAPI engin(LPVOID arg)
{
	int *index = (int*)(arg);	// device index
	openDevice(*index);			// 해당 인터페이스 오픈
	arp_scanning();				// LAN SCAN
	detect_engin(deviceName);	// Detect Engin 가동
	return 0;
}